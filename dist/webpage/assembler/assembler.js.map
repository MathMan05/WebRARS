{"version":3,"sources":["../../../src/webpage/assembler/assembler.ts"],"sourcesContent":["import {Ram} from \"../emulator/ram.js\";\nimport {I18n} from \"../i18n.js\";\nimport {parsedPart, parseLine} from \"./parser.js\";\nimport {instructions, registerNames} from \"../fetches.js\";\n\nconst regNames = new Map<string, {type: \"register\"; number: number; floating: boolean}>([\n\t...registerNames.int\n\t\t.map((_, i) => {\n\t\t\treturn _.map(\n\t\t\t\t(_) =>\n\t\t\t\t\t[\n\t\t\t\t\t\t_,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"register\",\n\t\t\t\t\t\t\tnumber: i,\n\t\t\t\t\t\t\tfloating: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t] as [string, {type: \"register\"; number: number; floating: boolean}],\n\t\t\t);\n\t\t})\n\t\t.flat(1),\n\t...registerNames.float\n\t\t.map((_, i) => {\n\t\t\treturn _.map(\n\t\t\t\t(_) =>\n\t\t\t\t\t[\n\t\t\t\t\t\t_,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"register\",\n\t\t\t\t\t\t\tnumber: i,\n\t\t\t\t\t\t\tfloating: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t] as [string, {type: \"register\"; number: number; floating: boolean}],\n\t\t\t);\n\t\t})\n\t\t.flat(1),\n]);\nconst instMap = new Map(\n\tinstructions.map((_) => {\n\t\tconst name = _.name;\n\t\treturn [name, _];\n\t}),\n);\nconst fakeMap = new Map(\n\tinstructions\n\t\t.filter((_) => _.type === \"fake\")\n\t\t.map((inst) => {\n\t\t\treturn [\n\t\t\t\tinst.name,\n\t\t\t\t{\n\t\t\t\t\tname: inst.name,\n\t\t\t\t\targs: inst.args.map((_, i) => i + 1 + \"\"),\n\t\t\t\t\tlines: inst.replace.split(\"\\n\").map((_) => [...parseLine(_)]),\n\t\t\t\t\tline: NaN,\n\t\t\t\t},\n\t\t\t];\n\t\t}),\n);\n\ntype symbolType =\n\t| {\n\t\t\tcontent: string;\n\t\t\ttype: \"variable\" | \"label\";\n\t  }\n\t| {\n\t\t\tcontent: string;\n\t\t\ttype: \"string\";\n\t  }\n\t| {\n\t\t\ttype: \"register\";\n\t\t\tnumber: number;\n\t\t\tfloating: boolean;\n\t  }\n\t| {\n\t\t\tcontent: string;\n\t\t\ttype: \"instruction\";\n\t  }\n\t| {\n\t\t\ttype: \"directive\";\n\t\t\tcontent: string;\n\t  }\n\t| {\n\t\t\ttype: \"unknown\";\n\t\t\tcontent: string;\n\t  }\n\t| {\n\t\t\ttype: \"parentheses\";\n\t\t\tcontains: symbolType[];\n\t  }\n\t| {\n\t\t\ttype: \"int\";\n\t\t\tcontent: bigint;\n\t  }\n\t| {\n\t\t\ttype: \"float\";\n\t\t\tcontent: number;\n\t  };\nclass AssemblError extends Error {\n\tline: number;\n\tfile: string;\n\ttrace: [number, string][] = [];\n\tconstructor(reason: string, line: number, file: string) {\n\t\tsuper(reason);\n\t\tthis.line = line;\n\t\tthis.file = file;\n\t}\n\taddTrace(line: number, file: string) {\n\t\tif (isNaN(this.line)) {\n\t\t\tthis.line = line;\n\t\t\tthis.file = file;\n\t\t\treturn;\n\t\t}\n\t\tthis.trace.push([line, file]);\n\t}\n}\ntype linkerInfo = Map<\n\tnumber,\n\t{\n\t\tlabel: string;\n\t\ttype: \"dword\" | \"word\" | \"byte\" | \"half\" | \"I\" | \"RI\" | \"S\" | \"RS\" | \"B\" | \"U\" | \"AU\" | \"J\";\n\t\tline: number;\n\t\tfile: string;\n\t}\n>;\ntype macro = {\n\tname: string;\n\targs: string[];\n\tlines: parsedPart[][];\n\tline: number;\n};\ntype labelMap = Map<string, number>;\nfunction assemble(files: [string, string][]) {\n\tconst textView = new DataView(new ArrayBuffer(1 << 22));\n\tlet textIndex = 0;\n\n\tconst dataView = new DataView(new ArrayBuffer(1 << 22));\n\tlet dataIndex = 0;\n\n\tconst globalDataLabels: linkerInfo = new Map();\n\tconst globalLabelMap: labelMap = new Map();\n\n\tfunction link(labelMap: labelMap, dataLables: linkerInfo, globalRun = false, macro = false) {\n\t\tconst ram = new Ram(dataView, textView, [dataIndex, textIndex, 1 << 22]);\n\n\t\tfor (const [address, thing] of dataLables) {\n\t\t\tconst label = labelMap.get(thing.label);\n\n\t\t\tif (!label) {\n\t\t\t\tif (globalRun) {\n\t\t\t\t\tthrow new AssemblError(\n\t\t\t\t\t\tI18n.errors.unmatchedLabel(thing.line + \"\", thing.label),\n\t\t\t\t\t\tthing.line,\n\t\t\t\t\t\tthing.file,\n\t\t\t\t\t);\n\t\t\t\t} else if (!macro) {\n\t\t\t\t\tglobalDataLabels.set(address, thing);\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdataLables.delete(address);\n\t\t\tswitch (thing.type) {\n\t\t\t\tcase \"byte\":\n\t\t\t\t\tram.setInt8(address, label);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"half\":\n\t\t\t\t\tram.setInt16(address, label);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"word\":\n\t\t\t\t\tram.setInt32(address, label);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"dword\":\n\t\t\t\t\tram.setBigInt64(address, label);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"U\": {\n\t\t\t\t\tconst inst = ram.getInt32(address);\n\t\t\t\t\tram.setInt32(address, (label & 0xfffff000) | inst);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"AU\": {\n\t\t\t\t\tconst inst = ram.getInt32(address);\n\t\t\t\t\tlet offset = label - address;\n\t\t\t\t\tif ((offset & 0xfff) > 2047) offset += 0x1000;\n\t\t\t\t\tram.setInt32(address, (offset & 0xfffff000) | inst);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"I\": {\n\t\t\t\t\tconst inst = ram.getInt32(address);\n\t\t\t\t\tram.setInt32(address, ((label & 0xfff) << 20) | inst);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"RI\": {\n\t\t\t\t\tconst inst = ram.getInt32(address);\n\t\t\t\t\tram.setInt32(address, (((label - address + 4) & 0xfff) << 20) | inst);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"B\": {\n\t\t\t\t\tconst inst = ram.getInt32(address);\n\t\t\t\t\tconst offset = label - address;\n\t\t\t\t\tif (offset & 1) {\n\t\t\t\t\t\tthrow new AssemblError(I18n.errors.evilJump(thing.line + \"\"), thing.line, thing.file);\n\t\t\t\t\t}\n\t\t\t\t\tconst evil =\n\t\t\t\t\t\t((offset & 0b11110) << 7) |\n\t\t\t\t\t\t((offset & 0b11111100000) << 20) |\n\t\t\t\t\t\t((offset & 0b100000000000) >>> 4) |\n\t\t\t\t\t\t((offset & 0b1000000000000) << 19);\n\t\t\t\t\tconsole.log((evil >>> 0).toString(2).padStart(32, \"0\"), offset.toString(16));\n\t\t\t\t\tram.setInt32(address, evil | inst);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"J\": {\n\t\t\t\t\tconst inst = ram.getInt32(address);\n\t\t\t\t\tconst offset = label - address;\n\t\t\t\t\tif (offset & 1) {\n\t\t\t\t\t\tthrow new AssemblError(I18n.errors.evilJump(thing.line + \"\"), thing.line, thing.file);\n\t\t\t\t\t}\n\t\t\t\t\tconst evil =\n\t\t\t\t\t\t((offset & 0b11111111110) << 20) ^\n\t\t\t\t\t\t((offset & 0b100000000000) << 9) ^\n\t\t\t\t\t\t(offset & 0b11111111000000000000) ^\n\t\t\t\t\t\t((offset & 0b100000000000000000000) << 11);\n\t\t\t\t\tconsole.log((evil >>> 0).toString(2).padStart(32, \"0\"), offset.toString(16));\n\t\t\t\t\tram.setInt32(address, evil | inst);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new AssemblError(\n\t\t\t\t\t\t\"Internal error, fix me unhandled linking case:\" + thing.type,\n\t\t\t\t\t\tNaN,\n\t\t\t\t\t\tthing.file,\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn ram;\n\t}\n\tfor (const [code, file] of files) {\n\t\tconsole.log(files);\n\t\tfunction getCurAddress() {\n\t\t\tif (place == \"data\") {\n\t\t\t\treturn dataIndex + 0x10010000;\n\t\t\t} else if (place == \"text\") {\n\t\t\t\treturn textIndex + 0x00400000;\n\t\t\t} else {\n\t\t\t\tthrow new AssemblError(\"internal error please fix\", NaN, file);\n\t\t\t}\n\t\t}\n\n\t\tconst basicParsing = code.split(\"\\n\").map((_) => parseLine(_));\n\n\t\tlet directive: \"double\" | \"float\" | \"dword\" | \"word\" | \"byte\" | \"half\" | \"ascii\" | \"asciz\" =\n\t\t\t\"word\";\n\t\tlet place: \"text\" | \"data\" = \"text\";\n\n\t\tconst globalLabelSet = new Set<[string, number]>();\n\t\tfunction assembleParsed(\n\t\t\tbasicParsing: Generator<parsedPart, void, unknown>[] | parsedPart[][],\n\t\t\tdataLables: linkerInfo = new Map(),\n\t\t\tlabelMap: labelMap = new Map(),\n\t\t\tvarMap = new Map<string, symbolType>(),\n\t\t\tmacros = new Map<string, macro>(),\n\t\t\ti = 0,\n\t\t\tmacro = false,\n\t\t) {\n\t\t\tconsole.trace(\"test\");\n\t\t\tlet macroBuild: macro | undefined;\n\t\t\tfunction placeData(\n\t\t\t\tdata:\n\t\t\t\t\t| {type: \"int\"; content: bigint}\n\t\t\t\t\t| {type: \"float\"; content: number}\n\t\t\t\t\t| {type: \"string\"; content: string}\n\t\t\t\t\t| {type: \"unknown\"; content: string}\n\t\t\t\t\t| {\n\t\t\t\t\t\t\ttype: \"instruction\";\n\t\t\t\t\t\t\tcontent: number;\n\t\t\t\t\t\t\tlink?: {type: \"I\" | \"RI\" | \"S\" | \"RS\" | \"B\" | \"U\" | \"AU\" | \"J\"; label: string};\n\t\t\t\t\t  },\n\t\t\t) {\n\t\t\t\tif (place === \"text\" && data.type !== \"instruction\") {\n\t\t\t\t\tif (data.type === \"int\") {\n\t\t\t\t\t\tthrow new AssemblError(I18n.errors.dataInText(i + 1 + \"\", data.content + \"\"), i, file);\n\t\t\t\t\t}\n\t\t\t\t\tthrow new AssemblError(\n\t\t\t\t\t\tI18n.errors.dataInText(i + 1 + \"\", JSON.stringify(data.content)),\n\t\t\t\t\t\ti,\n\t\t\t\t\t\tfile,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif ((directive === \"ascii\" || directive === \"asciz\") && place === \"data\") {\n\t\t\t\t\tif (data.type !== \"string\") {\n\t\t\t\t\t\tthrow new AssemblError(I18n.errors.notAString(i + 1 + \"\", data.type), i, file);\n\t\t\t\t\t}\n\t\t\t\t\tconst encode = new TextEncoder().encode(data.content);\n\t\t\t\t\tfor (const char of encode) {\n\t\t\t\t\t\tdataView.setUint8(dataIndex, char);\n\t\t\t\t\t\tdataIndex += 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (directive === \"asciz\") {\n\t\t\t\t\t\tdataView.setUint8(dataIndex, 0);\n\t\t\t\t\t\tdataIndex += 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t} else if (data.type === \"string\") {\n\t\t\t\t\tthrow new AssemblError(I18n.errors.stringOutsideOfDirrective(i + 1 + \"\"), i, file);\n\t\t\t\t}\n\t\t\t\tif (data.type === \"float\") {\n\t\t\t\t\tif (directive === \"float\") {\n\t\t\t\t\t\tdataView.setFloat32(dataIndex, data.content, true);\n\t\t\t\t\t\tdataIndex += 4;\n\t\t\t\t\t} else if (directive === \"double\") {\n\t\t\t\t\t\tdataView.setFloat64(dataIndex, data.content, true);\n\t\t\t\t\t\tdataIndex += 8;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new AssemblError(I18n.errors.wrongDirrectiveFloat(i + 1 + \"\"), i, file);\n\t\t\t\t\t}\n\t\t\t\t} else if (data.type == \"int\") {\n\t\t\t\t\tif (directive === \"byte\") {\n\t\t\t\t\t\tdataView.setUint8(dataIndex, Number(data.content & 0xffn));\n\t\t\t\t\t\tdataIndex += 1;\n\t\t\t\t\t} else if (directive === \"half\") {\n\t\t\t\t\t\tdataView.setUint16(dataIndex, Number(data.content & 0xffffn), true);\n\t\t\t\t\t\tdataIndex += 2;\n\t\t\t\t\t} else if (directive === \"word\") {\n\t\t\t\t\t\tdataView.setUint32(dataIndex, Number(data.content & 0xffffffffn), true);\n\t\t\t\t\t\tdataIndex += 4;\n\t\t\t\t\t} else if (directive === \"dword\") {\n\t\t\t\t\t\tdataView.setBigUint64(dataIndex, data.content, true);\n\t\t\t\t\t\tdataIndex += 8;\n\t\t\t\t\t} else if (directive === \"float\") {\n\t\t\t\t\t\tdataView.setFloat32(dataIndex, Number(data.content), true);\n\t\t\t\t\t\tdataIndex += 4;\n\t\t\t\t\t} else if (directive === \"double\") {\n\t\t\t\t\t\tdataView.setFloat64(dataIndex, Number(data.content), true);\n\t\t\t\t\t\tdataIndex += 8;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new AssemblError(\"internal error, please fix\", NaN, file);\n\t\t\t\t\t}\n\t\t\t\t} else if (data.type === \"unknown\") {\n\t\t\t\t\tif (directive == \"float\" || directive == \"double\") {\n\t\t\t\t\t\tthrow new AssemblError(I18n.errors.lableCantFloat(i + 1 + \"\"), i, file);\n\t\t\t\t\t} else if (directive !== \"ascii\" && directive != \"asciz\") {\n\t\t\t\t\t\tdataLables.set(getCurAddress(), {label: data.content, type: directive, line: i, file});\n\t\t\t\t\t\tif (directive === \"byte\") {\n\t\t\t\t\t\t\tdataIndex += 1;\n\t\t\t\t\t\t} else if (directive === \"half\") {\n\t\t\t\t\t\t\tdataIndex += 2;\n\t\t\t\t\t\t} else if (directive === \"word\") {\n\t\t\t\t\t\t\tdataIndex += 4;\n\t\t\t\t\t\t} else if (directive === \"dword\") {\n\t\t\t\t\t\t\tdataIndex += 8;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new AssemblError(\"internal error, please fix\", NaN, file);\n\t\t\t\t\t}\n\t\t\t\t} else if (data.type === \"instruction\") {\n\t\t\t\t\tif (data.link) {\n\t\t\t\t\t\tdataLables.set(getCurAddress(), {\n\t\t\t\t\t\t\tlabel: data.link.label,\n\t\t\t\t\t\t\ttype: data.link.type,\n\t\t\t\t\t\t\tline: i,\n\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tif (place === \"text\") {\n\t\t\t\t\t\ttextView.setUint32(textIndex, data.content, true);\n\t\t\t\t\t\ttextIndex += 4;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdataView.setUint32(dataIndex, data.content, true);\n\t\t\t\t\t\tdataIndex += 4;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new AssemblError(\"internal error, please fix\", NaN, file);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const line of basicParsing) {\n\t\t\t\tlet s = 0;\n\t\t\t\tconst lineArr = [...line];\n\t\t\t\tif (macroBuild) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tlineArr.length === 1 &&\n\t\t\t\t\t\tlineArr[0].type == \"directive\" &&\n\t\t\t\t\t\tlineArr[0].content == \".end_macro\"\n\t\t\t\t\t) {\n\t\t\t\t\t\tmacros.set(macroBuild.name, macroBuild);\n\t\t\t\t\t\tmacroBuild = undefined;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tmacroBuild.lines.push(lineArr);\n\t\t\t\t\ti++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfunction handleDirrective(data: {type: \"directive\"; content: string}) {\n\t\t\t\t\tswitch (data.content) {\n\t\t\t\t\t\tcase \"data\":\n\t\t\t\t\t\t\tplace = \"data\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"text\":\n\t\t\t\t\t\t\tplace = \"text\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"ascii\":\n\t\t\t\t\t\tcase \"asciz\":\n\t\t\t\t\t\tcase \"double\":\n\t\t\t\t\t\tcase \"float\":\n\t\t\t\t\t\tcase \"byte\":\n\t\t\t\t\t\tcase \"word\":\n\t\t\t\t\t\tcase \"dword\":\n\t\t\t\t\t\tcase \"half\":\n\t\t\t\t\t\t\tif (place === \"text\") {\n\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.dataDirectiveInText(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdirective = data.content;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"global\":\n\t\t\t\t\t\tcase \"globl\":\n\t\t\t\t\t\t\tlet label = getNextSymbol();\n\t\t\t\t\t\t\tif (!label) {\n\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectGlobal(i + 1 + \"\", data.content), i, file);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twhile (label) {\n\t\t\t\t\t\t\t\tif (label.type !== \"unknown\") {\n\t\t\t\t\t\t\t\t\tthrow new AssemblError(\n\t\t\t\t\t\t\t\t\t\tI18n.errors.expectedLabel(i + 1 + \"\", data.content),\n\t\t\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tglobalLabelSet.add([label.content, i]);\n\t\t\t\t\t\t\t\tlabel = getNextSymbol();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"macro\":\n\t\t\t\t\t\t\tconst name = getNextSymbol();\n\t\t\t\t\t\t\tif (!name || name.type !== \"unknown\") {\n\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.macroName(i + 1 + \"\", data.content), i, file);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst params = getNextSymbol();\n\t\t\t\t\t\t\tconst args: string[] = [];\n\t\t\t\t\t\t\tif (params) {\n\t\t\t\t\t\t\t\tif (params.type !== \"parentheses\") {\n\t\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.macroArgs(i + 1 + \"\", data.content), i, file);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const thing of params.contains) {\n\t\t\t\t\t\t\t\t\tif (thing.type !== \"variable\") {\n\t\t\t\t\t\t\t\t\t\tthrow new AssemblError(\n\t\t\t\t\t\t\t\t\t\t\tI18n.errors.macroArgs(i + 1 + \"\", data.content),\n\t\t\t\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\targs.push(thing.content);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmacroBuild = {\n\t\t\t\t\t\t\t\tname: name.content,\n\t\t\t\t\t\t\t\targs,\n\t\t\t\t\t\t\t\tlines: [],\n\t\t\t\t\t\t\t\tline: i + 1,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new AssemblError(\n\t\t\t\t\t\t\t\tI18n.errors.unknownDirective(i + 1 + \"\", data.content),\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst helperNext = (itterate = true) => {\n\t\t\t\t\treturn lineArr[(s += +itterate) - +itterate];\n\t\t\t\t};\n\t\t\t\tfunction getNextSymbol(helper = helperNext): symbolType | undefined {\n\t\t\t\t\tconst symbol = helper();\n\t\t\t\t\tif (!symbol) return undefined;\n\t\t\t\t\tswitch (symbol.type) {\n\t\t\t\t\t\tcase \"comment\":\n\t\t\t\t\t\tcase \"space\":\n\t\t\t\t\t\t\treturn getNextSymbol(helper);\n\t\t\t\t\t\tcase \"invalidString\":\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.invalidString(i + 1 + \"\"), i, file);\n\t\t\t\t\t\tcase \"invalidChar\":\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.invalidChar(i + 1 + \"\"), i, file);\n\t\t\t\t\t\tcase \"char\":\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tsymbol.content.length > 3 &&\n\t\t\t\t\t\t\t\t!(symbol.content.length === 4 && symbol.content[1] == \"\\\\\")\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.CharTooLong(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (symbol.type === \"parentheses\") {\n\t\t\t\t\t\tif (symbol.content === \"(\") {\n\t\t\t\t\t\t\tconst innards: symbolType[] = [];\n\t\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\t\tif (helper(false).type === \"parentheses\") {\n\t\t\t\t\t\t\t\t\tif (helper(false).content === \")\") {\n\t\t\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\ttype: \"parentheses\",\n\t\t\t\t\t\t\t\t\t\t\tcontains: innards,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.ParNoMatch(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst next = getNextSymbol(helper);\n\t\t\t\t\t\t\t\tif (!next) throw new AssemblError(I18n.errors.ParNoMatch(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t\t\tinnards.push(next);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.ParNoMatch(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (symbol.type === \"char\") {\n\t\t\t\t\t\tconst char = [...symbol.content];\n\t\t\t\t\t\tchar.pop();\n\t\t\t\t\t\tchar.shift();\n\t\t\t\t\t\tconst str = JSON.parse(`\"${char.join(\"\")}\"`) as string;\n\t\t\t\t\t\tif (str.length !== 1) {\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.CharTooLong(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: \"int\",\n\t\t\t\t\t\t\tcontent: BigInt(new TextEncoder().encode(str)[0]),\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (symbol.type === \"number\") {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\ttype: \"int\",\n\t\t\t\t\t\t\t\tcontent: BigInt(symbol.content),\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\ttype: \"float\",\n\t\t\t\t\t\t\t\tcontent: +symbol.content,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (symbol.type === \"label\") {\n\t\t\t\t\t\tconst arr = [...symbol.content];\n\t\t\t\t\t\tarr.pop();\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: \"label\",\n\t\t\t\t\t\t\tcontent: arr.join(\"\"),\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (symbol.type === \"directive\") {\n\t\t\t\t\t\tconst arr = [...symbol.content];\n\t\t\t\t\t\tarr.shift();\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: \"directive\",\n\t\t\t\t\t\t\tcontent: arr.join(\"\"),\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (symbol.type === \"string\") {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: \"string\",\n\t\t\t\t\t\t\tcontent: JSON.parse(symbol.content) as string,\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (symbol.type === \"register\") {\n\t\t\t\t\t\tconst reg = regNames.get(symbol.content);\n\t\t\t\t\t\tif (reg === undefined) throw new AssemblError(\"internal error fix me\", NaN, file);\n\t\t\t\t\t\treturn reg;\n\t\t\t\t\t} else if (symbol.type === \"variable\") {\n\t\t\t\t\t\tconst arr = [...symbol.content];\n\t\t\t\t\t\tarr.shift();\n\t\t\t\t\t\tconst content = arr.join(\"\");\n\t\t\t\t\t\tconst mapped = varMap.get(content);\n\t\t\t\t\t\tif (mapped) {\n\t\t\t\t\t\t\treturn mapped;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: \"variable\",\n\t\t\t\t\t\t\tcontent,\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: symbol.type,\n\t\t\t\t\t\tcontent: symbol.content,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tfunction handleInstruction(data: {type: \"instruction\"; content: string}) {\n\t\t\t\t\tfunction get12Bit() {\n\t\t\t\t\t\tconst sym = getNextSymbol();\n\t\t\t\t\t\tif (!sym)\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.InstructionNeededMoreParams(i + 1 + \"\"), i, file);\n\t\t\t\t\t\tif (sym.type !== \"int\")\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectedInt(i + 1 + \"\"), i, file);\n\t\t\t\t\t\tif (sym.content < -2048n || sym.content > 2047n) {\n\t\t\t\t\t\t\tthrow new AssemblError(\n\t\t\t\t\t\t\t\tI18n.errors.OutOfBounts12bit(i + 1 + \"\", sym.content + \"\"),\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn Number(sym.content);\n\t\t\t\t\t}\n\t\t\t\t\tfunction getNumb() {\n\t\t\t\t\t\tconst sym = getNextSymbol();\n\t\t\t\t\t\tif (!sym)\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.InstructionNeededMoreParams(i + 1 + \"\"), i, file);\n\t\t\t\t\t\tif (sym.type !== \"int\")\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectedInt(i + 1 + \"\"), i, file);\n\t\t\t\t\t\treturn Number(sym.content);\n\t\t\t\t\t}\n\t\t\t\t\tfunction get5Bit() {\n\t\t\t\t\t\tconst sym = getNextSymbol();\n\t\t\t\t\t\tif (!sym)\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.InstructionNeededMoreParams(i + 1 + \"\"), i, file);\n\t\t\t\t\t\tif (sym.type !== \"int\")\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectedInt(i + 1 + \"\"), i, file);\n\t\t\t\t\t\tif (sym.content < 0n || sym.content > 31n) {\n\t\t\t\t\t\t\tthrow new AssemblError(\n\t\t\t\t\t\t\t\tI18n.errors.OutOfBounds5bit(i + 1 + \"\", sym.content + \"\"),\n\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn Number(sym.content);\n\t\t\t\t\t}\n\t\t\t\t\tfunction getRegi(float = false) {\n\t\t\t\t\t\tconst sym = getNextSymbol();\n\t\t\t\t\t\tif (!sym)\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.InstructionNeededMoreParams(i + 1 + \"\"), i, file);\n\t\t\t\t\t\tif (sym.type !== \"register\")\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectedRegi(i + 1 + \"\"), i, file);\n\t\t\t\t\t\tif (!float && sym.floating) {\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectIntReg(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t} else if (float && !sym.floating) {\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectFloatReg(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn sym.number;\n\t\t\t\t\t}\n\t\t\t\t\tfunction getOffReg(type: \"I\" | \"S\", load: false | number) {\n\t\t\t\t\t\tlet sym = getNextSymbol();\n\t\t\t\t\t\tif (!sym)\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.InstructionNeededMoreParams(i + 1 + \"\"), i, file);\n\t\t\t\t\t\tlet offset = 0n;\n\t\t\t\t\t\tswitch (sym.type) {\n\t\t\t\t\t\t\t//@ts-expect-error\n\t\t\t\t\t\t\tcase \"int\":\n\t\t\t\t\t\t\t\toffset = sym.content;\n\t\t\t\t\t\t\t\tconst prev = sym;\n\t\t\t\t\t\t\t\tsym = getNextSymbol();\n\t\t\t\t\t\t\t\tif (!sym) {\n\t\t\t\t\t\t\t\t\tif (prev.content > 2047n || prev.content < -2048n) {\n\t\t\t\t\t\t\t\t\t\tif (load !== false) {\n\t\t\t\t\t\t\t\t\t\t\tif (prev.content !== (prev.content & 0xffffffffn)) {\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\t\t\t\t\t\t0b0110111 |\n\t\t\t\t\t\t\t\t\t\t\t\t\t(load << 7) |\n\t\t\t\t\t\t\t\t\t\t\t\t\t((Number(prev.content & 0xffffffffn) >> 12) << 12),\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t\t\treg: load,\n\t\t\t\t\t\t\t\t\t\t\t\toffset: Number(offset) & 0xfff,\n\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tthrow new AssemblError(\n\t\t\t\t\t\t\t\t\t\t\t\tI18n.errors.OutOfBountsOff12bit(i + 1 + \"\", prev.content + \"\"),\n\t\t\t\t\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\treg: 0,\n\t\t\t\t\t\t\t\t\t\toffset: Number(offset) & 0xfff,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t} else if (sym.type == \"parentheses\") {\n\t\t\t\t\t\t\t\t\t//fall\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectOffreg(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcase \"parentheses\":\n\t\t\t\t\t\t\t\tif (sym.contains.length > 1) {\n\t\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.TooManyPars(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t\t\t} else if (sym.contains.length === 0) {\n\t\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.TooFewPars(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (sym.contains[0].type !== \"register\") {\n\t\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectOffreg(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t\t\t} else if (sym.contains[0].floating) {\n\t\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectIntReg(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\treg: sym.contains[0].number,\n\t\t\t\t\t\t\t\t\toffset: Number(offset) & 0xfff,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcase \"unknown\":\n\t\t\t\t\t\t\t\tif (load === false) {\n\t\t\t\t\t\t\t\t\tconst sym = getNextSymbol();\n\t\t\t\t\t\t\t\t\tif (!sym)\n\t\t\t\t\t\t\t\t\t\tthrow new AssemblError(\n\t\t\t\t\t\t\t\t\t\t\tI18n.errors.InstructionNeededMoreParams(i + 1 + \"\"),\n\t\t\t\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tif (sym.type !== \"register\") {\n\t\t\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectedRegi(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t\t\t\t} else if (sym.floating) {\n\t\t\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectIntReg(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tload = sym.number;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\t\t\tcontent: 0b0010111 | (load << 7),\n\t\t\t\t\t\t\t\t\tlink: {type: \"AU\", label: sym.content},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tdataLables.set(getCurAddress(), {\n\t\t\t\t\t\t\t\t\tlabel: sym.content,\n\t\t\t\t\t\t\t\t\ttype: (\"R\" + type) as \"RI\" | \"RS\",\n\t\t\t\t\t\t\t\t\tline: i,\n\t\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\treg: load,\n\t\t\t\t\t\t\t\t\toffset: 0,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectOffreg(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfunction getLabel() {\n\t\t\t\t\t\tconst sym = getNextSymbol();\n\t\t\t\t\t\tif (!sym)\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.InstructionNeededMoreParams(i + 1 + \"\"), i, file);\n\t\t\t\t\t\tif (sym.type !== \"unknown\")\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectedLabel(i + 1 + \"\"), i, file);\n\t\t\t\t\t\treturn sym.content;\n\t\t\t\t\t}\n\t\t\t\t\tfunction assertClear() {\n\t\t\t\t\t\tconst sym = getNextSymbol();\n\t\t\t\t\t\tif (sym) throw new AssemblError(I18n.errors.tooManyArguments(i + 1 + \"\"), i, file);\n\t\t\t\t\t}\n\t\t\t\t\tconst info = instMap.get(data.content);\n\t\t\t\t\tif (!info) throw new AssemblError(\"internal error fix me\", i, file);\n\n\t\t\t\t\tswitch (info.type) {\n\t\t\t\t\t\tcase \"R\": {\n\t\t\t\t\t\t\tconst lay =\n\t\t\t\t\t\t\t\tinfo.opcode |\n\t\t\t\t\t\t\t\t(getRegi(info.args[0] === \"freg\") << 7) |\n\t\t\t\t\t\t\t\t(info.funct3 << 12) |\n\t\t\t\t\t\t\t\t(getRegi(info.args[1] === \"freg\") << 15) |\n\t\t\t\t\t\t\t\t(info.funct7 << 25) |\n\t\t\t\t\t\t\t\t(getRegi(info.args[2] === \"freg\") << 20);\n\t\t\t\t\t\t\tassertClear();\n\t\t\t\t\t\t\tplaceData({type: \"instruction\", content: lay});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"I\": {\n\t\t\t\t\t\t\tif (info.args[1] === \"offreg\") {\n\t\t\t\t\t\t\t\tconst reg = getRegi(info.args[0] === \"freg\");\n\t\t\t\t\t\t\t\tconst off = getOffReg(\"I\", reg);\n\t\t\t\t\t\t\t\tconst lay =\n\t\t\t\t\t\t\t\t\tinfo.opcode |\n\t\t\t\t\t\t\t\t\t(reg << 7) |\n\t\t\t\t\t\t\t\t\t(info.funct3 << 12) |\n\t\t\t\t\t\t\t\t\t(off.reg << 15) |\n\t\t\t\t\t\t\t\t\t(off.offset << 20);\n\t\t\t\t\t\t\t\tplaceData({type: \"instruction\", content: lay});\n\t\t\t\t\t\t\t} else if (info.pimm !== undefined) {\n\t\t\t\t\t\t\t\tconst lay =\n\t\t\t\t\t\t\t\t\tinfo.opcode |\n\t\t\t\t\t\t\t\t\t(getRegi(info.args[0] === \"freg\") << 7) |\n\t\t\t\t\t\t\t\t\t(info.funct3 << 12) |\n\t\t\t\t\t\t\t\t\t(getRegi(info.args[1] === \"freg\") << 15) |\n\t\t\t\t\t\t\t\t\t(get5Bit() << 20) |\n\t\t\t\t\t\t\t\t\t(info.pimm << 25);\n\n\t\t\t\t\t\t\t\tplaceData({type: \"instruction\", content: lay});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst lay =\n\t\t\t\t\t\t\t\t\tinfo.opcode |\n\t\t\t\t\t\t\t\t\t(getRegi(info.args[0] === \"freg\") << 7) |\n\t\t\t\t\t\t\t\t\t(info.funct3 << 12) |\n\t\t\t\t\t\t\t\t\t(getRegi(info.args[1] === \"freg\") << 15) |\n\t\t\t\t\t\t\t\t\t(get12Bit() << 20);\n\n\t\t\t\t\t\t\t\tplaceData({type: \"instruction\", content: lay});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tassertClear();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"S\": {\n\t\t\t\t\t\t\tconst reg = getRegi(info.args[0] === \"freg\");\n\t\t\t\t\t\t\tconst off = getOffReg(\"S\", reg);\n\t\t\t\t\t\t\tconst lay =\n\t\t\t\t\t\t\t\tinfo.opcode |\n\t\t\t\t\t\t\t\t((off.offset & 0b11111) << 7) |\n\t\t\t\t\t\t\t\t(info.funct3 << 12) |\n\t\t\t\t\t\t\t\t(off.reg << 15) |\n\t\t\t\t\t\t\t\t(reg << 20) |\n\t\t\t\t\t\t\t\t((off.offset >> 5) << 25);\n\t\t\t\t\t\t\tplaceData({type: \"instruction\", content: lay});\n\t\t\t\t\t\t\tassertClear();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"B\": {\n\t\t\t\t\t\t\tconst lay =\n\t\t\t\t\t\t\t\tinfo.opcode |\n\t\t\t\t\t\t\t\t(info.funct3 << 12) |\n\t\t\t\t\t\t\t\t(getRegi(info.args[0] === \"freg\") << 15) |\n\t\t\t\t\t\t\t\t(getRegi(info.args[1] === \"freg\") << 20);\n\t\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\t\tcontent: lay,\n\t\t\t\t\t\t\t\tlink: {\n\t\t\t\t\t\t\t\t\ttype: \"B\",\n\t\t\t\t\t\t\t\t\tlabel: getLabel(),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tassertClear();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"J\": {\n\t\t\t\t\t\t\tconst lay = info.opcode | (getRegi() << 7);\n\t\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\t\tcontent: lay,\n\t\t\t\t\t\t\t\tlink: {\n\t\t\t\t\t\t\t\t\ttype: \"J\",\n\t\t\t\t\t\t\t\t\tlabel: getLabel(),\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tassertClear();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"U\": {\n\t\t\t\t\t\t\tlet lay = info.opcode | (getRegi(info.args[0] === \"freg\") << 7);\n\t\t\t\t\t\t\tlet next = getNextSymbol();\n\t\t\t\t\t\t\tif (!next)\n\t\t\t\t\t\t\t\tthrow new AssemblError(\n\t\t\t\t\t\t\t\t\tI18n.errors.InstructionNeededMoreParams(i + 1 + \"\"),\n\t\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (next.type === \"variable\" || next.type == \"unknown\") {\n\t\t\t\t\t\t\t\tif (next.type === \"variable\") {\n\t\t\t\t\t\t\t\t\tnext = getNextSymbol();\n\t\t\t\t\t\t\t\t\tif (!next)\n\t\t\t\t\t\t\t\t\t\tthrow new AssemblError(\n\t\t\t\t\t\t\t\t\t\t\tI18n.errors.InstructionNeededMoreParams(i + 1 + \"\"),\n\t\t\t\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tif (next.type !== \"parentheses\")\n\t\t\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectedLabelPars(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t\t\t\tif (next.contains.length > 1)\n\t\t\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.TooManyPars(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t\t\t\tif (next.contains.length < 1)\n\t\t\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.TooFewPars(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t\t\t\tnext = next.contains[0];\n\t\t\t\t\t\t\t\t\tif (next.type !== \"unknown\")\n\t\t\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectedLabel(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\t\t\tcontent: lay,\n\t\t\t\t\t\t\t\t\tlink: {\n\t\t\t\t\t\t\t\t\t\ttype: info.name === \"auipc\" ? \"AU\" : \"U\",\n\t\t\t\t\t\t\t\t\t\tlabel: next.content,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else if (next.type === \"int\") {\n\t\t\t\t\t\t\t\tif (next.content < -524288n || next.content > 524287n) {\n\t\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.OutOfBounts20bit(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlay = lay | (Number(next.content) << 12);\n\t\t\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\t\t\tcontent: lay,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.UErrorType2(i + 1 + \"\"), i, file);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tassertClear();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"W\": {\n\t\t\t\t\t\t\tplaceData({type: \"instruction\", content: info.code});\n\t\t\t\t\t\t\tassertClear();\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"fake\": {\n\t\t\t\t\t\t\tconst macro = fakeMap.get(info.name);\n\t\t\t\t\t\t\tif (macro) {\n\t\t\t\t\t\t\t\tconst argBuild: symbolType[] = [];\n\t\t\t\t\t\t\t\tlet thing = getNextSymbol();\n\n\t\t\t\t\t\t\t\twhile (thing) {\n\t\t\t\t\t\t\t\t\targBuild.push(thing);\n\t\t\t\t\t\t\t\t\tthing = getNextSymbol();\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (argBuild.length !== macro.args.length) {\n\t\t\t\t\t\t\t\t\tif (argBuild.length > macro.args.length) {\n\t\t\t\t\t\t\t\t\t\tthrow new AssemblError(\n\t\t\t\t\t\t\t\t\t\t\tI18n.errors.tooManyArguments(\n\t\t\t\t\t\t\t\t\t\t\t\ti + 1 + \"\",\n\t\t\t\t\t\t\t\t\t\t\t\tmacro.args.length + \"\",\n\t\t\t\t\t\t\t\t\t\t\t\targBuild.length + \"\",\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthrow new AssemblError(\n\t\t\t\t\t\t\t\t\t\t\tI18n.errors.TooFewPars(\n\t\t\t\t\t\t\t\t\t\t\t\ti + 1 + \"\",\n\t\t\t\t\t\t\t\t\t\t\t\tmacro.args.length + \"\",\n\t\t\t\t\t\t\t\t\t\t\t\targBuild.length + \"\",\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst argMap = new Map(\n\t\t\t\t\t\t\t\t\targBuild.map((_, index) => {\n\t\t\t\t\t\t\t\t\t\treturn [macro.args[index], _];\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst sdirective = directive;\n\t\t\t\t\t\t\t\tconst splace = place;\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tconst dataLables2: linkerInfo = new Map();\n\t\t\t\t\t\t\t\t\tassembleParsed(\n\t\t\t\t\t\t\t\t\t\tmacro.lines,\n\t\t\t\t\t\t\t\t\t\tdataLables2,\n\t\t\t\t\t\t\t\t\t\tnew Map(),\n\t\t\t\t\t\t\t\t\t\targMap,\n\t\t\t\t\t\t\t\t\t\tnew Map(),\n\t\t\t\t\t\t\t\t\t\tmacro.line,\n\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tfor (const thing of dataLables2) {\n\t\t\t\t\t\t\t\t\t\tdataLables.set(...thing);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\tif (e instanceof AssemblError) {\n\t\t\t\t\t\t\t\t\t\te.addTrace(i, file);\n\t\t\t\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdirective = sdirective;\n\t\t\t\t\t\t\t\tplace = splace;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new AssemblError(\"internal error, please fix\", NaN, file);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"reallyfake\": {\n\t\t\t\t\t\t\tswitch (info.name) {\n\t\t\t\t\t\t\t\tcase \"la\": {\n\t\t\t\t\t\t\t\t\tconst reg = getRegi();\n\t\t\t\t\t\t\t\t\tconst label = getLabel();\n\t\t\t\t\t\t\t\t\tassertClear();\n\t\t\t\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\t\t\t\tcontent: 0b0010111 | (reg << 7),\n\t\t\t\t\t\t\t\t\t\tlink: {type: \"AU\", label},\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\t\t\t\tcontent: 0b0010011 | (reg << 7) | (reg << 15),\n\t\t\t\t\t\t\t\t\t\tlink: {type: \"RI\", label},\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tcase \"li\": {\n\t\t\t\t\t\t\t\t\tconst reg = getRegi();\n\t\t\t\t\t\t\t\t\tconst numb = getNumb();\n\t\t\t\t\t\t\t\t\tassertClear();\n\t\t\t\t\t\t\t\t\tif (numb <= 2047n && numb >= -2048) {\n\t\t\t\t\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\t\t\t\t\tcontent: 0b0010011 | (reg << 7) | (Number(numb) << 20),\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} else if (numb <= 2147483647n && numb >= -2147483648) {\n\t\t\t\t\t\t\t\t\t\tconst low = Number(numb) & 0xfff;\n\t\t\t\t\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\t\t\t\t\t0b0110111 |\n\t\t\t\t\t\t\t\t\t\t\t\t(reg << 7) |\n\t\t\t\t\t\t\t\t\t\t\t\t(Number(numb + (low > 2047 ? 2048 : 0)) & 0xfffff000),\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\t\t\t\t\tcontent: 0b0011011 | (reg << 7) | (reg << 15) | (low << 20),\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (true) {\n\t\t\t\t\tconst sym = getNextSymbol();\n\t\t\t\t\tif (!sym) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tswitch (sym.type) {\n\t\t\t\t\t\t//@ts-expect-error\n\t\t\t\t\t\tcase \"unknown\":\n\t\t\t\t\t\t\tconst macro = macros.get(sym.content);\n\t\t\t\t\t\t\tif (macro) {\n\t\t\t\t\t\t\t\tlet argBuild: symbolType[] = [];\n\t\t\t\t\t\t\t\tlet thing = getNextSymbol();\n\t\t\t\t\t\t\t\tif (thing) {\n\t\t\t\t\t\t\t\t\tif (thing.type === \"parentheses\") {\n\t\t\t\t\t\t\t\t\t\targBuild = thing.contains;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\twhile (thing) {\n\t\t\t\t\t\t\t\t\t\t\targBuild.push(thing);\n\t\t\t\t\t\t\t\t\t\t\tthing = getNextSymbol();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (argBuild.length !== macro.args.length) {\n\t\t\t\t\t\t\t\t\tif (argBuild.length > macro.args.length) {\n\t\t\t\t\t\t\t\t\t\tthrow new AssemblError(\n\t\t\t\t\t\t\t\t\t\t\tI18n.errors.tooManyArgumentsMacro(\n\t\t\t\t\t\t\t\t\t\t\t\ti + 1 + \"\",\n\t\t\t\t\t\t\t\t\t\t\t\tmacro.args.length + \"\",\n\t\t\t\t\t\t\t\t\t\t\t\targBuild.length + \"\",\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthrow new AssemblError(\n\t\t\t\t\t\t\t\t\t\t\tI18n.errors.tooFewArgumentsMacro(\n\t\t\t\t\t\t\t\t\t\t\t\ti + 1 + \"\",\n\t\t\t\t\t\t\t\t\t\t\t\tmacro.args.length + \"\",\n\t\t\t\t\t\t\t\t\t\t\t\targBuild.length + \"\",\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst argMap = new Map(\n\t\t\t\t\t\t\t\t\targBuild.map((_, index) => {\n\t\t\t\t\t\t\t\t\t\treturn [macro.args[index], _];\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst sdirective = directive;\n\t\t\t\t\t\t\t\tconst splace = place;\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tassembleParsed(\n\t\t\t\t\t\t\t\t\t\tmacro.lines,\n\t\t\t\t\t\t\t\t\t\tnew Map(dataLables),\n\t\t\t\t\t\t\t\t\t\tnew Map(labelMap),\n\t\t\t\t\t\t\t\t\t\targMap,\n\t\t\t\t\t\t\t\t\t\tnew Map(macros),\n\t\t\t\t\t\t\t\t\t\tmacro.line,\n\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\tif (e instanceof AssemblError) {\n\t\t\t\t\t\t\t\t\t\te.addTrace(i, file);\n\t\t\t\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdirective = sdirective;\n\t\t\t\t\t\t\t\tplace = splace;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"int\":\n\t\t\t\t\t\tcase \"float\":\n\t\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\t\tplaceData(sym);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"label\":\n\t\t\t\t\t\t\t//TODO check for conflicts\n\t\t\t\t\t\t\tlabelMap.set(sym.content, getCurAddress());\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"register\":\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.loneRegister(i + 1 + \"\"), i, file);\n\t\t\t\t\t\tcase \"variable\":\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.varOutsideMacro(i + 1 + \"\"), i, file);\n\t\t\t\t\t\tcase \"parentheses\":\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.parenthesesWeird(i + 1 + \"\"), i, file);\n\t\t\t\t\t\tcase \"directive\":\n\t\t\t\t\t\t\thandleDirrective(sym);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase \"instruction\":\n\t\t\t\t\t\t\thandleInstruction(sym);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t//@ts-expect-error\n\t\t\t\t\t\t\tconsole.error(sym.type, \"not handled\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tfor (const arr of globalLabelSet) {\n\t\t\t\tconst [thing] = arr;\n\t\t\t\tconst label = labelMap.get(thing);\n\t\t\t\tif (!label) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tglobalLabelMap.set(thing, label);\n\t\t\t\tglobalLabelSet.delete(arr);\n\t\t\t}\n\t\t\tlink(labelMap, dataLables, false, macro);\n\t\t}\n\t\tassembleParsed(basicParsing);\n\t\tfor (const [thing, line] of globalLabelSet) {\n\t\t\tthrow new AssemblError(I18n.errors.unmatchedLabel(line + 1 + \"\", thing), line, file);\n\t\t}\n\t}\n\n\tconsole.warn(\"global linking\");\n\tconst ram = link(globalLabelMap, globalDataLabels, true);\n\tconst main = globalLabelMap.get(\"main\");\n\treturn [ram, main || 0x00400000] as [Ram, number];\n}\nexport {assemble, AssemblError};\n"],"names":["Ram","I18n","parseLine","instructions","registerNames","regNames","Map","int","map","_","i","type","number","floating","flat","float","instMap","name","fakeMap","filter","inst","args","lines","replace","split","line","NaN","AssemblError","Error","file","trace","constructor","reason","addTrace","isNaN","push","assemble","files","textView","DataView","ArrayBuffer","textIndex","dataView","dataIndex","globalDataLabels","globalLabelMap","link","labelMap","dataLables","globalRun","macro","ram","address","thing","label","get","errors","unmatchedLabel","set","delete","setInt8","setInt16","setInt32","setBigInt64","getInt32","offset","evilJump","evil","console","log","toString","padStart","code","getCurAddress","place","basicParsing","directive","globalLabelSet","Set","assembleParsed","varMap","macros","macroBuild","placeData","data","dataInText","content","JSON","stringify","notAString","encode","TextEncoder","char","setUint8","stringOutsideOfDirrective","setFloat32","setFloat64","wrongDirrectiveFloat","Number","setUint16","setUint32","setBigUint64","lableCantFloat","s","lineArr","length","undefined","handleDirrective","dataDirectiveInText","getNextSymbol","expectGlobal","expectedLabel","add","macroName","params","macroArgs","contains","unknownDirective","helperNext","itterate","helper","symbol","invalidString","invalidChar","CharTooLong","innards","ParNoMatch","next","pop","shift","str","parse","join","BigInt","arr","reg","mapped","handleInstruction","get12Bit","sym","InstructionNeededMoreParams","expectedInt","OutOfBounts12bit","getNumb","get5Bit","OutOfBounds5bit","getRegi","expectedRegi","expectIntReg","expectFloatReg","getOffReg","load","prev","OutOfBountsOff12bit","expectOffreg","TooManyPars","TooFewPars","getLabel","assertClear","tooManyArguments","info","lay","opcode","funct3","funct7","off","pimm","expectedLabelPars","OutOfBounts20bit","UErrorType2","argBuild","argMap","index","sdirective","splace","dataLables2","e","numb","low","tooManyArgumentsMacro","tooFewArgumentsMacro","loneRegister","varOutsideMacro","parenthesesWeird","error","warn","main"],"mappings":"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"}