{"version":3,"sources":["../../../src/webpage/assembler/assembler.ts"],"sourcesContent":["import {Ram} from \"../emulator/ram.js\";\nimport {I18n} from \"../i18n.js\";\nimport {parseLine} from \"./parser.js\";\nimport {instructions, registerNames} from \"../fetches.js\";\n\nconst regNames = new Map<string, {type: \"register\"; number: number; floating: boolean}>([\n\t...registerNames.int\n\t\t.map((_, i) => {\n\t\t\treturn _.map(\n\t\t\t\t(_) =>\n\t\t\t\t\t[\n\t\t\t\t\t\t_,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"register\",\n\t\t\t\t\t\t\tnumber: i,\n\t\t\t\t\t\t\tfloating: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t] as [string, {type: \"register\"; number: number; floating: boolean}],\n\t\t\t);\n\t\t})\n\t\t.flat(1),\n\t...registerNames.float\n\t\t.map((_, i) => {\n\t\t\treturn _.map(\n\t\t\t\t(_) =>\n\t\t\t\t\t[\n\t\t\t\t\t\t_,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"register\",\n\t\t\t\t\t\t\tnumber: i,\n\t\t\t\t\t\t\tfloating: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t] as [string, {type: \"register\"; number: number; floating: boolean}],\n\t\t\t);\n\t\t})\n\t\t.flat(1),\n]);\nconst instMap = new Map(\n\tinstructions.map((_) => {\n\t\tconst name = _.name;\n\t\treturn [name, _];\n\t}),\n);\n/*\n\t| \"string\"\n\t| \"comment\"\n\t| \"space\"\n\t| \"invalidString\"\n\t| \"parentheses\"\n\t| \"instruction\"\n\t| \"number\"\n\t| \"register\"\n\t| \"variable\"\n\t| \"label\"\n\t| \"char\"\n\t| \"invalidChar\"\n\t| \"directive\"\n\t| \"unknown\";\n*/\ntype symbolType =\n\t| {\n\t\t\tcontent: string;\n\t\t\ttype: \"variable\" | \"label\";\n\t  }\n\t| {\n\t\t\tcontent: string;\n\t\t\ttype: \"string\";\n\t  }\n\t| {\n\t\t\ttype: \"register\";\n\t\t\tnumber: number;\n\t\t\tfloating: boolean;\n\t  }\n\t| {\n\t\t\tcontent: string;\n\t\t\ttype: \"instruction\";\n\t  }\n\t| {\n\t\t\ttype: \"directive\";\n\t\t\tcontent: string;\n\t  }\n\t| {\n\t\t\ttype: \"unknown\";\n\t\t\tcontent: string;\n\t  }\n\t| {\n\t\t\ttype: \"parentheses\";\n\t\t\tcontains: symbolType[];\n\t  }\n\t| {\n\t\t\ttype: \"int\";\n\t\t\tcontent: bigint;\n\t  }\n\t| {\n\t\t\ttype: \"float\";\n\t\t\tcontent: number;\n\t  };\nclass AssemblError extends Error {\n\treadonly line: number;\n\tconstructor(reason: string, line: number) {\n\t\tsuper(reason);\n\t\tthis.line = line;\n\t}\n}\ntype linkerInfo = Map<\n\tnumber,\n\t{\n\t\tlabel: string;\n\t\ttype: \"dword\" | \"word\" | \"byte\" | \"half\" | \"I\" | \"RI\" | \"S\" | \"RS\" | \"B\" | \"U\" | \"AU\" | \"J\";\n\t\tline: number;\n\t}\n>;\ntype labelMap = Map<string, number>;\nfunction assemble(code: string) {\n\tconst basicParsing = code.split(\"\\n\").map((_) => parseLine(_));\n\tlet i = 0;\n\tlet directive: \"double\" | \"float\" | \"dword\" | \"word\" | \"byte\" | \"half\" | \"ascii\" | \"asciz\" =\n\t\t\"word\";\n\tlet place: \"text\" | \"data\" = \"text\";\n\tfunction getCurAddress() {\n\t\tif (place == \"data\") {\n\t\t\treturn dataIndex + 0x10010000;\n\t\t} else if (place == \"text\") {\n\t\t\treturn textIndex + 0x00400000;\n\t\t} else {\n\t\t\tthrow new AssemblError(\"internal error please fix\", NaN);\n\t\t}\n\t}\n\n\tconst labelMap: labelMap = new Map();\n\n\tconst textView = new DataView(new ArrayBuffer(1 << 22));\n\tlet textIndex = 0;\n\n\tconst dataView = new DataView(new ArrayBuffer(1 << 22));\n\tlet dataIndex = 0;\n\tconst dataLables: linkerInfo = new Map();\n\n\tfunction placeData(\n\t\tdata:\n\t\t\t| {type: \"int\"; content: bigint}\n\t\t\t| {type: \"float\"; content: number}\n\t\t\t| {type: \"string\"; content: string}\n\t\t\t| {type: \"unknown\"; content: string}\n\t\t\t| {\n\t\t\t\t\ttype: \"instruction\";\n\t\t\t\t\tcontent: number;\n\t\t\t\t\tlink?: {type: \"I\" | \"RI\" | \"S\" | \"RS\" | \"B\" | \"U\" | \"AU\" | \"J\"; label: string};\n\t\t\t  },\n\t) {\n\t\tif (place === \"text\" && data.type !== \"instruction\") {\n\t\t\tif (data.type === \"int\") {\n\t\t\t\tthrow new AssemblError(I18n.errors.dataInText(i + 1 + \"\", data.content + \"\"), i);\n\t\t\t}\n\t\t\tthrow new AssemblError(I18n.errors.dataInText(i + 1 + \"\", JSON.stringify(data.content)), i);\n\t\t}\n\t\tif ((directive === \"ascii\" || directive === \"asciz\") && place === \"data\") {\n\t\t\tif (data.type !== \"string\") {\n\t\t\t\tthrow new AssemblError(I18n.errors.notAString(i + 1 + \"\", data.type), i);\n\t\t\t}\n\t\t\tconst encode = new TextEncoder().encode(data.content);\n\t\t\tfor (const char of encode) {\n\t\t\t\tdataView.setUint8(dataIndex, char);\n\t\t\t\tdataIndex += 1;\n\t\t\t}\n\t\t\tif (directive === \"asciz\") {\n\t\t\t\tdataView.setUint8(dataIndex, 0);\n\t\t\t\tdataIndex += 1;\n\t\t\t}\n\t\t\treturn;\n\t\t} else if (data.type === \"string\") {\n\t\t\tdebugger;\n\t\t\tthrow new AssemblError(I18n.errors.stringOutsideOfDirrective(i + 1 + \"\"), i);\n\t\t}\n\t\tif (data.type === \"float\") {\n\t\t\tif (directive === \"float\") {\n\t\t\t\tdataView.setFloat32(dataIndex, data.content, true);\n\t\t\t\tdataIndex += 4;\n\t\t\t} else if (directive === \"double\") {\n\t\t\t\tdataView.setFloat64(dataIndex, data.content, true);\n\t\t\t\tdataIndex += 8;\n\t\t\t} else {\n\t\t\t\tthrow new AssemblError(I18n.errors.wrongDirrectiveFloat(i + 1 + \"\"), i);\n\t\t\t}\n\t\t} else if (data.type == \"int\") {\n\t\t\tif (directive === \"byte\") {\n\t\t\t\tdataView.setUint8(dataIndex, Number(data.content & 0xffn));\n\t\t\t\tdataIndex += 1;\n\t\t\t} else if (directive === \"half\") {\n\t\t\t\tdataView.setUint16(dataIndex, Number(data.content & 0xffffn), true);\n\t\t\t\tdataIndex += 2;\n\t\t\t} else if (directive === \"word\") {\n\t\t\t\tdataView.setUint32(dataIndex, Number(data.content & 0xffffffffn), true);\n\t\t\t\tdataIndex += 4;\n\t\t\t} else if (directive === \"dword\") {\n\t\t\t\tdataView.setBigUint64(dataIndex, data.content, true);\n\t\t\t\tdataIndex += 8;\n\t\t\t} else if (directive === \"float\") {\n\t\t\t\tdataView.setFloat32(dataIndex, Number(data.content), true);\n\t\t\t\tdataIndex += 4;\n\t\t\t} else if (directive === \"double\") {\n\t\t\t\tdataView.setFloat64(dataIndex, Number(data.content), true);\n\t\t\t\tdataIndex += 8;\n\t\t\t} else {\n\t\t\t\tthrow new AssemblError(\"internal error, please fix\", NaN);\n\t\t\t}\n\t\t} else if (data.type === \"unknown\") {\n\t\t\tif (directive == \"float\" || directive == \"double\") {\n\t\t\t\tthrow new AssemblError(I18n.errors.lableCantFloat(i + 1 + \"\"), i);\n\t\t\t} else {\n\t\t\t\tdataLables.set(getCurAddress(), {label: data.content, type: directive, line: i});\n\t\t\t\tif (directive === \"byte\") {\n\t\t\t\t\tdataIndex += 1;\n\t\t\t\t} else if (directive === \"half\") {\n\t\t\t\t\tdataIndex += 2;\n\t\t\t\t} else if (directive === \"word\") {\n\t\t\t\t\tdataIndex += 4;\n\t\t\t\t} else if (directive === \"dword\") {\n\t\t\t\t\tdataIndex += 8;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (data.type === \"instruction\") {\n\t\t\tif (data.link) {\n\t\t\t\tdataLables.set(getCurAddress(), {label: data.link.label, type: data.link.type, line: i});\n\t\t\t}\n\t\t\tif (place === \"text\") {\n\t\t\t\ttextView.setUint32(textIndex, data.content, true);\n\t\t\t\ttextIndex += 4;\n\t\t\t} else {\n\t\t\t\tdataView.setUint32(dataIndex, data.content, true);\n\t\t\t\tdataIndex += 4;\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new AssemblError(\"internal error, please fix\", NaN);\n\t\t}\n\t}\n\n\tfor (const line of basicParsing) {\n\t\tlet s = 0;\n\t\tconst lineArr = [...line];\n\t\tfunction handleDirrective(data: {type: \"directive\"; content: string}) {\n\t\t\tswitch (data.content) {\n\t\t\t\tcase \"data\":\n\t\t\t\t\tplace = \"data\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"text\":\n\t\t\t\t\tplace = \"text\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ascii\":\n\t\t\t\tcase \"asciz\":\n\t\t\t\tcase \"double\":\n\t\t\t\tcase \"float\":\n\t\t\t\tcase \"byte\":\n\t\t\t\tcase \"word\":\n\t\t\t\tcase \"dword\":\n\t\t\t\tcase \"half\":\n\t\t\t\t\tif (place === \"text\") {\n\t\t\t\t\t\tthrow new AssemblError(I18n.errors.dataDirectiveInText(i + 1 + \"\"), i);\n\t\t\t\t\t}\n\t\t\t\t\tdirective = data.content;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new AssemblError(I18n.errors.unknownDirective(i + 1 + \"\", data.content), i);\n\t\t\t}\n\t\t}\n\t\tconst helperNext = (itterate = true) => {\n\t\t\treturn lineArr[(s += +itterate) - +itterate];\n\t\t};\n\t\tfunction getNextSymbol(\n\t\t\thelper = helperNext,\n\t\t\tvarMap = new Map<string, symbolType>(),\n\t\t): symbolType | undefined {\n\t\t\tconst symbol = helper();\n\t\t\tif (!symbol) return undefined;\n\t\t\tswitch (symbol.type) {\n\t\t\t\tcase \"comment\":\n\t\t\t\tcase \"space\":\n\t\t\t\t\treturn getNextSymbol(helper);\n\t\t\t\tcase \"invalidString\":\n\t\t\t\t\tthrow new AssemblError(I18n.errors.invalidString(i + 1 + \"\"), i);\n\t\t\t\tcase \"invalidChar\":\n\t\t\t\t\tthrow new AssemblError(I18n.errors.invalidChar(i + 1 + \"\"), i);\n\t\t\t\tcase \"char\":\n\t\t\t\t\tif (\n\t\t\t\t\t\tsymbol.content.length > 3 &&\n\t\t\t\t\t\t!(symbol.content.length === 4 && symbol.content[1] == \"\\\\\")\n\t\t\t\t\t) {\n\t\t\t\t\t\tthrow new AssemblError(I18n.errors.CharTooLong(i + 1 + \"\"), i);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (symbol.type === \"parentheses\") {\n\t\t\t\tif (symbol.content === \"(\") {\n\t\t\t\t\tconst innards: symbolType[] = [];\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tif (helper(false).type === \"parentheses\") {\n\t\t\t\t\t\t\tif (helper(false).content === \")\") {\n\t\t\t\t\t\t\t\ts++;\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\ttype: \"parentheses\",\n\t\t\t\t\t\t\t\t\tcontains: innards,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.ParNoMatch(i + 1 + \"\"), i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst next = getNextSymbol(helper);\n\t\t\t\t\t\tif (!next) throw new AssemblError(I18n.errors.ParNoMatch(i + 1 + \"\"), i);\n\t\t\t\t\t\tinnards.push(next);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new AssemblError(I18n.errors.ParNoMatch(i + 1 + \"\"), i);\n\t\t\t\t}\n\t\t\t} else if (symbol.type === \"char\") {\n\t\t\t\tconst char = [...symbol.content];\n\t\t\t\tchar.pop();\n\t\t\t\tchar.shift();\n\t\t\t\tconst str = JSON.parse(`\"${char.join(\"\")}\"`) as string;\n\t\t\t\tif (str.length !== 1) {\n\t\t\t\t\tthrow new AssemblError(I18n.errors.CharTooLong(i + 1 + \"\"), i);\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"int\",\n\t\t\t\t\tcontent: BigInt(new TextEncoder().encode(str)[0]),\n\t\t\t\t};\n\t\t\t} else if (symbol.type === \"number\") {\n\t\t\t\ttry {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: \"int\",\n\t\t\t\t\t\tcontent: BigInt(symbol.content),\n\t\t\t\t\t};\n\t\t\t\t} catch {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: \"float\",\n\t\t\t\t\t\tcontent: +symbol.content,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} else if (symbol.type === \"label\") {\n\t\t\t\tconst arr = [...symbol.content];\n\t\t\t\tarr.pop();\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"label\",\n\t\t\t\t\tcontent: arr.join(\"\"),\n\t\t\t\t};\n\t\t\t} else if (symbol.type === \"directive\") {\n\t\t\t\tconst arr = [...symbol.content];\n\t\t\t\tarr.shift();\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"directive\",\n\t\t\t\t\tcontent: arr.join(\"\"),\n\t\t\t\t};\n\t\t\t} else if (symbol.type === \"string\") {\n\t\t\t\tconst arr = [...symbol.content];\n\t\t\t\tarr.shift();\n\t\t\t\tarr.pop();\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"string\",\n\t\t\t\t\tcontent: arr.join(\"\"),\n\t\t\t\t};\n\t\t\t} else if (symbol.type === \"register\") {\n\t\t\t\tconst reg = regNames.get(symbol.content);\n\t\t\t\tif (reg === undefined) throw new AssemblError(\"internal error fix me\", NaN);\n\t\t\t\treturn reg;\n\t\t\t} else if (symbol.type === \"variable\") {\n\t\t\t\tconst arr = [...symbol.content];\n\t\t\t\tarr.shift();\n\t\t\t\tconst content = arr.join(\"\");\n\t\t\t\tconst mapped = varMap.get(content);\n\t\t\t\tif (mapped) {\n\t\t\t\t\treturn mapped;\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"variable\",\n\t\t\t\t\tcontent,\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttype: symbol.type,\n\t\t\t\tcontent: symbol.content,\n\t\t\t};\n\t\t}\n\t\tfunction handleInstruction(data: {type: \"instruction\"; content: string}) {\n\t\t\tfunction get12Bit() {\n\t\t\t\tconst sym = getNextSymbol();\n\t\t\t\tif (!sym) throw new AssemblError(I18n.errors.InstructionNeededMoreParams(i + 1 + \"\"), i);\n\t\t\t\tif (sym.type !== \"int\") throw new AssemblError(I18n.errors.expectedInt(i + 1 + \"\"), i);\n\t\t\t\tif (sym.content < -2048n || sym.content > 2047n) {\n\t\t\t\t\tthrow new AssemblError(I18n.errors.OutOfBounts12bit(i + 1 + \"\", sym.content + \"\"), i);\n\t\t\t\t}\n\t\t\t\treturn Number(sym.content);\n\t\t\t}\n\t\t\tfunction getNumb() {\n\t\t\t\tconst sym = getNextSymbol();\n\t\t\t\tif (!sym) throw new AssemblError(I18n.errors.InstructionNeededMoreParams(i + 1 + \"\"), i);\n\t\t\t\tif (sym.type !== \"int\") throw new AssemblError(I18n.errors.expectedInt(i + 1 + \"\"), i);\n\t\t\t\treturn Number(sym.content);\n\t\t\t}\n\t\t\tfunction get5Bit() {\n\t\t\t\tconst sym = getNextSymbol();\n\t\t\t\tif (!sym) throw new AssemblError(I18n.errors.InstructionNeededMoreParams(i + 1 + \"\"), i);\n\t\t\t\tif (sym.type !== \"int\") throw new AssemblError(I18n.errors.expectedInt(i + 1 + \"\"), i);\n\t\t\t\tif (sym.content < 0n || sym.content > 31n) {\n\t\t\t\t\tthrow new AssemblError(I18n.errors.OutOfBounds5bit(i + 1 + \"\", sym.content + \"\"), i);\n\t\t\t\t}\n\t\t\t\treturn Number(sym.content);\n\t\t\t}\n\t\t\tfunction getRegi(float = false) {\n\t\t\t\tconst sym = getNextSymbol();\n\t\t\t\tif (!sym) throw new AssemblError(I18n.errors.InstructionNeededMoreParams(i + 1 + \"\"), i);\n\t\t\t\tif (sym.type !== \"register\")\n\t\t\t\t\tthrow new AssemblError(I18n.errors.expectedRegi(i + 1 + \"\"), i);\n\t\t\t\tif (!float && sym.floating) {\n\t\t\t\t\tthrow new AssemblError(I18n.errors.expectIntReg(i + 1 + \"\"), i);\n\t\t\t\t} else if (float && !sym.floating) {\n\t\t\t\t\tthrow new AssemblError(I18n.errors.expectFloatReg(i + 1 + \"\"), i);\n\t\t\t\t}\n\t\t\t\treturn sym.number;\n\t\t\t}\n\t\t\tfunction getOffReg(type: \"I\" | \"S\", load: false | number) {\n\t\t\t\tlet sym = getNextSymbol();\n\t\t\t\tif (!sym) throw new AssemblError(I18n.errors.InstructionNeededMoreParams(i + 1 + \"\"), i);\n\t\t\t\tlet offset = 0n;\n\t\t\t\tswitch (sym.type) {\n\t\t\t\t\t//@ts-expect-error\n\t\t\t\t\tcase \"int\":\n\t\t\t\t\t\toffset = sym.content;\n\t\t\t\t\t\tconst prev = sym;\n\t\t\t\t\t\tsym = getNextSymbol();\n\t\t\t\t\t\tif (!sym) {\n\t\t\t\t\t\t\tif (prev.content > 2047n || prev.content < -2048n) {\n\t\t\t\t\t\t\t\tif (load !== false) {\n\t\t\t\t\t\t\t\t\tif (prev.content !== (prev.content & 0xffffffffn)) {\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\t\t\t\tcontent:\n\t\t\t\t\t\t\t\t\t\t\t0b0110111 | (load << 7) | ((Number(prev.content & 0xffffffffn) >> 12) << 12),\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\treg: load,\n\t\t\t\t\t\t\t\t\t\toffset: Number(offset) & 0xfff,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthrow new AssemblError(\n\t\t\t\t\t\t\t\t\t\tI18n.errors.OutOfBountsOff12bit(i + 1 + \"\", prev.content + \"\"),\n\t\t\t\t\t\t\t\t\t\ti,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\treg: 0,\n\t\t\t\t\t\t\t\toffset: Number(offset) & 0xfff,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t} else if (sym.type == \"parentheses\") {\n\t\t\t\t\t\t\t//fall\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectOffreg(i + 1 + \"\"), i);\n\t\t\t\t\t\t}\n\t\t\t\t\tcase \"parentheses\":\n\t\t\t\t\t\tif (sym.contains.length > 1) {\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.TooManyPars(i + 1 + \"\"), i);\n\t\t\t\t\t\t} else if (sym.contains.length === 0) {\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.TooFewPars(i + 1 + \"\"), i);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (sym.contains[0].type !== \"register\") {\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectOffreg(i + 1 + \"\"), i);\n\t\t\t\t\t\t} else if (sym.contains[0].floating) {\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectIntReg(i + 1 + \"\"), i);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\treg: sym.contains[0].number,\n\t\t\t\t\t\t\toffset: Number(offset) & 0xfff,\n\t\t\t\t\t\t};\n\t\t\t\t\tcase \"unknown\":\n\t\t\t\t\t\tif (load === false) {\n\t\t\t\t\t\t\tconst sym = getNextSymbol();\n\t\t\t\t\t\t\tif (!sym)\n\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.InstructionNeededMoreParams(i + 1 + \"\"), i);\n\t\t\t\t\t\t\tif (sym.type !== \"register\") {\n\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectedRegi(i + 1 + \"\"), i);\n\t\t\t\t\t\t\t} else if (sym.floating) {\n\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectIntReg(i + 1 + \"\"), i);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tload = sym.number;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\tcontent: 0b0010111 | (load << 7),\n\t\t\t\t\t\t\tlink: {type: \"AU\", label: sym.content},\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdataLables.set(getCurAddress(), {\n\t\t\t\t\t\t\tlabel: sym.content,\n\t\t\t\t\t\t\ttype: (\"R\" + type) as \"RI\" | \"RS\",\n\t\t\t\t\t\t\tline: i,\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\treg: load,\n\t\t\t\t\t\t\toffset: 0,\n\t\t\t\t\t\t};\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectOffreg(i + 1 + \"\"), i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction getLabel() {\n\t\t\t\tconst sym = getNextSymbol();\n\t\t\t\tif (!sym) throw new AssemblError(I18n.errors.InstructionNeededMoreParams(i + 1 + \"\"), i);\n\t\t\t\tif (sym.type !== \"unknown\")\n\t\t\t\t\tthrow new AssemblError(I18n.errors.expectedLabel(i + 1 + \"\"), i);\n\t\t\t\treturn sym.content;\n\t\t\t}\n\t\t\tfunction assertClear() {\n\t\t\t\tconst sym = getNextSymbol();\n\t\t\t\tif (sym) throw new AssemblError(I18n.errors.tooManyArguments(i + 1 + \"\"), i);\n\t\t\t}\n\t\t\tconst info = instMap.get(data.content);\n\t\t\tif (!info) throw new AssemblError(\"internal error fix me\", i);\n\n\t\t\tswitch (info.type) {\n\t\t\t\tcase \"R\": {\n\t\t\t\t\tconst lay =\n\t\t\t\t\t\tinfo.opcode |\n\t\t\t\t\t\t(getRegi(info.args[0] === \"freg\") << 7) |\n\t\t\t\t\t\t(info.funct3 << 12) |\n\t\t\t\t\t\t(getRegi(info.args[1] === \"freg\") << 15) |\n\t\t\t\t\t\t(info.funct7 << 25) |\n\t\t\t\t\t\t(getRegi(info.args[2] === \"freg\") << 20);\n\t\t\t\t\tassertClear();\n\t\t\t\t\tplaceData({type: \"instruction\", content: lay});\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"I\": {\n\t\t\t\t\tif (info.args[1] === \"offreg\") {\n\t\t\t\t\t\tconst reg = getRegi(info.args[0] === \"freg\");\n\t\t\t\t\t\tconst off = getOffReg(\"I\", reg);\n\t\t\t\t\t\tconst lay =\n\t\t\t\t\t\t\tinfo.opcode | (reg << 7) | (info.funct3 << 12) | (off.reg << 15) | (off.offset << 20);\n\t\t\t\t\t\tplaceData({type: \"instruction\", content: lay});\n\t\t\t\t\t} else if (info.pimm !== undefined) {\n\t\t\t\t\t\tconst lay =\n\t\t\t\t\t\t\tinfo.opcode |\n\t\t\t\t\t\t\t(getRegi(info.args[0] === \"freg\") << 7) |\n\t\t\t\t\t\t\t(info.funct3 << 12) |\n\t\t\t\t\t\t\t(getRegi(info.args[1] === \"freg\") << 15) |\n\t\t\t\t\t\t\t(get5Bit() << 20) |\n\t\t\t\t\t\t\t(info.pimm << 25);\n\n\t\t\t\t\t\tplaceData({type: \"instruction\", content: lay});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst lay =\n\t\t\t\t\t\t\tinfo.opcode |\n\t\t\t\t\t\t\t(getRegi(info.args[0] === \"freg\") << 7) |\n\t\t\t\t\t\t\t(info.funct3 << 12) |\n\t\t\t\t\t\t\t(getRegi(info.args[1] === \"freg\") << 15) |\n\t\t\t\t\t\t\t(get12Bit() << 20);\n\n\t\t\t\t\t\tplaceData({type: \"instruction\", content: lay});\n\t\t\t\t\t}\n\t\t\t\t\tassertClear();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"S\": {\n\t\t\t\t\tconst reg = getRegi(info.args[0] === \"freg\");\n\t\t\t\t\tconst off = getOffReg(\"S\", reg);\n\t\t\t\t\tconst lay =\n\t\t\t\t\t\tinfo.opcode |\n\t\t\t\t\t\t((off.offset & 0b11111) << 7) |\n\t\t\t\t\t\t(info.funct3 << 12) |\n\t\t\t\t\t\t(off.reg << 15) |\n\t\t\t\t\t\t(reg << 20) |\n\t\t\t\t\t\t((off.offset >> 5) << 25);\n\t\t\t\t\tplaceData({type: \"instruction\", content: lay});\n\t\t\t\t\tassertClear();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"B\": {\n\t\t\t\t\tconst lay =\n\t\t\t\t\t\tinfo.opcode |\n\t\t\t\t\t\t(info.funct3 << 12) |\n\t\t\t\t\t\t(getRegi(info.args[0] === \"freg\") << 15) |\n\t\t\t\t\t\t(getRegi(info.args[1] === \"freg\") << 20);\n\t\t\t\t\tplaceData({\n\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\tcontent: lay,\n\t\t\t\t\t\tlink: {\n\t\t\t\t\t\t\ttype: \"B\",\n\t\t\t\t\t\t\tlabel: getLabel(),\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tassertClear();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"J\": {\n\t\t\t\t\tconst lay = info.opcode | (getRegi() << 7);\n\t\t\t\t\tplaceData({\n\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\tcontent: lay,\n\t\t\t\t\t\tlink: {\n\t\t\t\t\t\t\ttype: \"J\",\n\t\t\t\t\t\t\tlabel: getLabel(),\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t\tassertClear();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"U\": {\n\t\t\t\t\tlet lay = info.opcode | (getRegi(info.args[0] === \"freg\") << 7);\n\t\t\t\t\tlet next = getNextSymbol();\n\t\t\t\t\tif (!next) throw new AssemblError(I18n.errors.InstructionNeededMoreParams(i + 1 + \"\"), i);\n\t\t\t\t\tif (next.type === \"variable\" || next.type == \"unknown\") {\n\t\t\t\t\t\tif (next.type === \"variable\") {\n\t\t\t\t\t\t\tnext = getNextSymbol();\n\t\t\t\t\t\t\tif (!next)\n\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.InstructionNeededMoreParams(i + 1 + \"\"), i);\n\t\t\t\t\t\t\tif (next.type !== \"parentheses\")\n\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectedLabelPars(i + 1 + \"\"), i);\n\t\t\t\t\t\t\tif (next.contains.length > 1)\n\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.TooManyPars(i + 1 + \"\"), i);\n\t\t\t\t\t\t\tif (next.contains.length < 1)\n\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.TooFewPars(i + 1 + \"\"), i);\n\t\t\t\t\t\t\tnext = next.contains[0];\n\t\t\t\t\t\t\tif (next.type !== \"unknown\")\n\t\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.expectedLabel(i + 1 + \"\"), i);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\tcontent: lay,\n\t\t\t\t\t\t\tlink: {\n\t\t\t\t\t\t\t\ttype: info.name === \"auipc\" ? \"AU\" : \"U\",\n\t\t\t\t\t\t\t\tlabel: next.content,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (next.type === \"int\") {\n\t\t\t\t\t\tif (next.content < -524288n || next.content > 524287n) {\n\t\t\t\t\t\t\tthrow new AssemblError(I18n.errors.OutOfBounts20bit(i + 1 + \"\"), i);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlay = lay | (Number(next.content) << 12);\n\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\tcontent: lay,\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new AssemblError(I18n.errors.UErrorType2(i + 1 + \"\"), i);\n\t\t\t\t\t}\n\t\t\t\t\tassertClear();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"W\": {\n\t\t\t\t\tplaceData({type: \"instruction\", content: info.code});\n\t\t\t\t\tassertClear();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"reallyfake\": {\n\t\t\t\t\tswitch (info.name) {\n\t\t\t\t\t\tcase \"la\": {\n\t\t\t\t\t\t\tconst reg = getRegi();\n\t\t\t\t\t\t\tconst label = getLabel();\n\t\t\t\t\t\t\tassertClear();\n\t\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\t\tcontent: 0b0010111 | (reg << 7),\n\t\t\t\t\t\t\t\tlink: {type: \"AU\", label},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\t\tcontent: 0b0010011 | (reg << 7) | (reg << 15),\n\t\t\t\t\t\t\t\tlink: {type: \"RI\", label},\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcase \"li\": {\n\t\t\t\t\t\t\tconst reg = getRegi();\n\t\t\t\t\t\t\tconst numb = getNumb();\n\t\t\t\t\t\t\tassertClear();\n\t\t\t\t\t\t\tif (numb <= 2047n && numb >= -2048) {\n\t\t\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\t\t\tcontent: 0b0010011 | (reg << 7) | (Number(numb) << 20),\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else if (numb <= 2147483647n && numb >= -2147483648) {\n\t\t\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\t\t\tcontent: 0b0110111 | (reg << 7) | (Number(numb) & 0xfffff000),\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tplaceData({\n\t\t\t\t\t\t\t\t\ttype: \"instruction\",\n\t\t\t\t\t\t\t\t\tcontent: 0b0010011 | (reg << 7) | ((Number(numb) & 0xfff) << 20),\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twhile (true) {\n\t\t\tconst sym = getNextSymbol();\n\t\t\tif (!sym) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tswitch (sym.type) {\n\t\t\t\tcase \"unknown\":\n\t\t\t\tcase \"int\":\n\t\t\t\tcase \"float\":\n\t\t\t\tcase \"string\":\n\t\t\t\t\tplaceData(sym);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"label\":\n\t\t\t\t\t//TODO check for conflicts\n\t\t\t\t\tlabelMap.set(sym.content, getCurAddress());\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"register\":\n\t\t\t\t\tthrow new AssemblError(I18n.errors.loneRegister(i + 1 + \"\"), i);\n\t\t\t\tcase \"variable\":\n\t\t\t\t\tthrow new AssemblError(I18n.errors.varOutsideMacro(i + 1 + \"\"), i);\n\t\t\t\tcase \"parentheses\":\n\t\t\t\t\tthrow new AssemblError(I18n.errors.parenthesesWeird(i + 1 + \"\"), i);\n\t\t\t\tcase \"directive\":\n\t\t\t\t\thandleDirrective(sym);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"instruction\":\n\t\t\t\t\thandleInstruction(sym);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t//@ts-expect-error\n\t\t\t\t\tconsole.error(sym.type, \"not handled\");\n\t\t\t}\n\t\t}\n\t\ti++;\n\t}\n\tconst ram = new Ram(dataView, textView, [dataIndex, textIndex]);\n\tfor (const [address, thing] of dataLables) {\n\t\tconst label = labelMap.get(thing.label);\n\t\tif (!label) throw new AssemblError(I18n.errors.unmatchedLabel(thing.line + \"\"), thing.line);\n\t\tswitch (thing.type) {\n\t\t\tcase \"byte\":\n\t\t\t\tram.setInt8(address, label);\n\t\t\t\tbreak;\n\t\t\tcase \"half\":\n\t\t\t\tram.setInt16(address, label);\n\t\t\t\tbreak;\n\t\t\tcase \"word\":\n\t\t\t\tram.setInt32(address, label);\n\t\t\t\tbreak;\n\t\t\tcase \"dword\":\n\t\t\t\tram.setBigInt64(address, label);\n\t\t\t\tbreak;\n\t\t\tcase \"U\": {\n\t\t\t\tconst inst = ram.getInt32(address);\n\t\t\t\tram.setInt32(address, (label & 0xfffff000) | inst);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"AU\": {\n\t\t\t\tconst inst = ram.getInt32(address);\n\t\t\t\tlet offset = label - address;\n\t\t\t\tif ((offset & 0xfff) > 2047) offset += 0x1000;\n\t\t\t\tram.setInt32(address, (offset & 0xfffff000) | inst);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"I\": {\n\t\t\t\tconst inst = ram.getInt32(address);\n\t\t\t\tram.setInt32(address, ((label & 0xfff) << 20) | inst);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"RI\": {\n\t\t\t\tconst inst = ram.getInt32(address);\n\t\t\t\tram.setInt32(address, (((label - address + 4) & 0xfff) << 20) | inst);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"B\": {\n\t\t\t\tconst inst = ram.getInt32(address);\n\t\t\t\tconst offset = label - address;\n\t\t\t\tif (offset & 1) {\n\t\t\t\t\tthrow new AssemblError(I18n.errors.evilJump(thing.line + \"\"), thing.line);\n\t\t\t\t}\n\t\t\t\tconst evil =\n\t\t\t\t\t((offset & 0b11110) << 7) |\n\t\t\t\t\t((offset & 0b11111100000) << 20) |\n\t\t\t\t\t((offset & 0b100000000000) >>> 4) |\n\t\t\t\t\t((offset & 0b1000000000000) << 19);\n\t\t\t\tconsole.log((evil >>> 0).toString(2).padStart(32, \"0\"), offset.toString(16));\n\t\t\t\tram.setInt32(address, evil | inst);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"J\": {\n\t\t\t\tconst inst = ram.getInt32(address);\n\t\t\t\tconst offset = label - address;\n\t\t\t\tif (offset & 1) {\n\t\t\t\t\tthrow new AssemblError(I18n.errors.evilJump(thing.line + \"\"), thing.line);\n\t\t\t\t}\n\t\t\t\tconst evil =\n\t\t\t\t\t((offset & 0b11111111110) << 20) ^\n\t\t\t\t\t((offset & 0b100000000000) << 9) ^\n\t\t\t\t\t(offset & 0b11111111000000000000) ^\n\t\t\t\t\t((offset & 0b100000000000000000000) << 11);\n\t\t\t\tconsole.log((evil >>> 0).toString(2).padStart(32, \"0\"), offset.toString(16));\n\t\t\t\tram.setInt32(address, evil | inst);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\tthrow new AssemblError(\"Internal error, fix me unhandled linking case:\" + thing.type, NaN);\n\t\t}\n\t}\n\treturn ram;\n}\nexport {assemble, AssemblError};\n"],"names":["Ram","I18n","parseLine","instructions","registerNames","regNames","Map","int","map","_","i","type","number","floating","flat","float","instMap","name","AssemblError","Error","line","constructor","reason","assemble","code","basicParsing","split","directive","place","getCurAddress","dataIndex","textIndex","NaN","labelMap","textView","DataView","ArrayBuffer","dataView","dataLables","placeData","data","errors","dataInText","content","JSON","stringify","notAString","encode","TextEncoder","char","setUint8","stringOutsideOfDirrective","setFloat32","setFloat64","wrongDirrectiveFloat","Number","setUint16","setUint32","setBigUint64","lableCantFloat","set","label","link","s","lineArr","handleDirrective","dataDirectiveInText","unknownDirective","helperNext","itterate","getNextSymbol","helper","varMap","symbol","undefined","invalidString","invalidChar","length","CharTooLong","innards","contains","ParNoMatch","next","push","pop","shift","str","parse","join","BigInt","arr","reg","get","mapped","handleInstruction","get12Bit","sym","InstructionNeededMoreParams","expectedInt","OutOfBounts12bit","getNumb","get5Bit","OutOfBounds5bit","getRegi","expectedRegi","expectIntReg","expectFloatReg","getOffReg","load","offset","prev","OutOfBountsOff12bit","expectOffreg","TooManyPars","TooFewPars","getLabel","expectedLabel","assertClear","tooManyArguments","info","lay","opcode","args","funct3","funct7","off","pimm","expectedLabelPars","OutOfBounts20bit","UErrorType2","numb","loneRegister","varOutsideMacro","parenthesesWeird","console","error","ram","address","thing","unmatchedLabel","setInt8","setInt16","setInt32","setBigInt64","inst","getInt32","evilJump","evil","log","toString","padStart"],"mappings":"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"}